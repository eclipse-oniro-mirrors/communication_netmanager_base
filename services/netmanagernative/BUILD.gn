# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/communication/netmanager_base/netmanager_base_config.gni")

ohos_shared_library("netsys_native_manager") {
  sources = [
    "$NETSYSNATIVE_INNERKITS_SOURCE_DIR/dhcp_result_parcel.cpp",
    "$NETSYSNATIVE_INNERKITS_SOURCE_DIR/netsys_addr_info_parcel.cpp",
    "$NETSYSNATIVE_INNERKITS_SOURCE_DIR/netsys_native_service_proxy.cpp",
    "$NETSYSNATIVE_INNERKITS_SOURCE_DIR/notify_callback_proxy.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/dhcp_controller.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/bandwidth_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/bpf/bpf_map_creator.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/bpf/bpf_prog_loader.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/conn_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/dns_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/firewall_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/interface_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/route_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/sharing_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/manager/traffic_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/dnsresolv/dns_param_cache.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/dnsresolv/dns_proxy_listen.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/dnsresolv/dns_resolv_config.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/dnsresolv/dns_resolv_listen.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/fwmark_network.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/iptables_wrapper.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/local_network.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/net_manager_native.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/netlink_msg.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/netlink_socket.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/netsys_network.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/netsys_udp_transfer.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/physical_network.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/wrapper/data_receiver.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/wrapper/netlink_manager.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/wrapper/netsys_event_message.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/wrapper/wrapper_decoder.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/wrapper/wrapper_distributor.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys/wrapper/wrapper_listener.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys_native_service.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/netsys_native_service_stub.cpp",
    "$NETSYSNATIVE_SOURCE_DIR/src/notify_callback_stub.cpp",
  ]

  include_dirs = [
    "$NETSYSNATIVE_INNERKITS_SOURCE_DIR",
    "$INNERKITS_ROOT/include",
    "$NETMANAGER_BASE_ROOT/services/common/include",
    "$NETMANAGER_BASE_ROOT/utils/common_utils/include",
    "$INNERKITS_ROOT/include",
    "$INNERKITS_ROOT/netmanagernative/include",
    "$NETSYSNATIVE_SOURCE_DIR/include",
    "$NETSYSNATIVE_SOURCE_DIR/include/manager",
    "$NETSYSNATIVE_SOURCE_DIR/include/netsys",
    "$NETSYSNATIVE_SOURCE_DIR/include/netsys/wrapper",
    "//foundation/communication/wifi/dhcp/interfaces/inner_api/include",
    "//foundation/communication/wifi/dhcp/interfaces/inner_api/interfaces",
    "//commonlibrary/c_utils/base/include",
  ]

  deps = [
    "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
    "//foundation/communication/netmanager_base/services/netmanagernative/netsys_client",
    "//foundation/communication/wifi/dhcp/services/mgr_service:dhcp_manager_service",
    "//third_party/iptables:iptables",
    "//third_party/iptables:iptables-restore",
    "//third_party/iptables:iptables-save",
  ]

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = [
    "NETMGRNATIVE_LOG_TAG = \"NetsysNativeService\"",
    "LOG_DOMAIN = 0xD0015B0",
    "NETSYS_CONFIG_DEBUG=0",
    "DNS_CONFIG_DEBUG=0",
  ]

  public_configs = [ "$NETMANAGER_BASE_ROOT/utils:netmgr_common_config" ]

  if (enable_sys_func) {
    defines += [ "SYS_FUNC" ]
  }

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  part_name = "netmanager_base"
  subsystem_name = "communication"
}
