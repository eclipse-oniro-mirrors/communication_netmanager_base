# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/communication/netmanager_base/netmanager_base_config.gni")

SUBSYSTEM_DIR = "//foundation/communication"

ohos_shared_library("net_tether_manager") {
  sources = [
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_controller/net_tether_controller.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_controller/net_tether_controller_factory.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_iface_manager.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_ip_address.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_ip_coordinator.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_netd_utils.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_recv_broadcast.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_request_network.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tether_service.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/net_tethering.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/stub/net_tether_callback_proxy.cpp",
    "$NETTETHERMANAGER_SOURCE_DIR/src/stub/net_tether_service_stub.cpp",
  ]

  include_dirs = [
    "$NETTETHERMANAGER_SOURCE_DIR/include",
    "$NETTETHERMANAGER_SOURCE_DIR/include/stub",
    "$INNERKITS_ROOT/nettetherclient/include",
    "$INNERKITS_ROOT/nettetherclient/include/proxy",
    "$NETDCONTROLLER_ROOT_DIR/include",
    "$NETTETHERMANAGER_SOURCE_DIR/include/net_tether_controller",
    "//foundation/communication/wifi/services/wifi_standard/wifi_framework/dhcp_manage/mgr_service/include",
    "//foundation/communication/wifi/services/wifi_standard/wifi_framework/dhcp_manage/mgr_service/interfaces",
    "$INNERKITS_ROOT/netconnclient/include",
    "$NETMANAGERNATIVE_ROOT/net_mgr_native/include",
  ]

  deps = [
    "$INNERKITS_ROOT/netconnclient:net_conn_manager_if",
    "$NETDCONTROLLER_ROOT_DIR:netd_controller",
    "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
    "//foundation/communication/wifi/services/wifi_standard/wifi_framework/dhcp_manage/mgr_service:dhcp_manager_service",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "aafwk_standard:want",
    "ces_standard:cesfwk_core",
    "ces_standard:cesfwk_innerkits",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  defines = [
    "NETMGR_LOG_TAG = \"NetTetherManager\"",
    "LOG_DOMAIN = 0xD0015B0",
  ]

  if (enable_netmgr_debug) {
    defines += [ "NETMGR_DEBUG" ]
  }

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  subsystem_name = "communication"
  part_name = "netmanager_base"
}
