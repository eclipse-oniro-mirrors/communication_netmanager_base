# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/netmanager_base/netmanager_base_config.gni")

ohos_unittest("net_conn_manager_test") {
  module_out_path = "netmanager_base/netmanager_base/net_conn_manager_test"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  branch_protector_ret = "pac_ret"
  use_exceptions = true
  sources = [
    "$NETMANAGER_BASE_ROOT/test/security/netmanager_base_test_security.cpp",
    "net_common_event_test.cpp",
    "net_conn_callback_stub_test.cpp",
    "net_conn_callback_test.cpp",
    "net_conn_manager_test.cpp",
    "net_conn_service_test.cpp",
    "net_conn_service_xtra_test.cpp",
    "net_detection_callback_stub_test.cpp",
    "net_detection_callback_test.cpp",
    "network_test.cpp",
  ]

  include_dirs = [
    "$INNERKITS_ROOT/include",
    "$INNERKITS_ROOT/netconnclient/include",
    "$INNERKITS_ROOT/netconnclient/include/proxy",
    "$NETCONNMANAGER_SOURCE_DIR/include/stub",
    "$NETCONNMANAGER_SOURCE_DIR/include",
    "$NETMANAGERNATIVE_ROOT/net_mgr_native/include",
    "$NETMANAGERNATIVE_ROOT/common/include",
    "$NETPOLICYMANAGER_SOURCE_DIR/include",
    "$NETPOLICYMANAGER_SOURCE_DIR/include/stub",
    "$NETMANAGER_BASE_ROOT/interfaces/kits/c/netconnclient/include",
    "$NETMANAGER_BASE_ROOT/services/common/include",
    "$NETMANAGER_BASE_ROOT/test/commonduplicatedcode",
    "$NETMANAGER_BASE_ROOT/test/security",
    "$NETSYSCONTROLLER_ROOT_DIR/include",
    "$NETSYSNATIVE_SOURCE_DIR/include/netsys",
    "$INNERKITS_ROOT/netmanagernative/include",
  ]

  deps = [
    "$INNERKITS_ROOT/netconnclient:net_conn_manager_if",
    "$INNERKITS_ROOT/netmanagernative:net_native_manager_if",
    "$INNERKITS_ROOT/netstatsclient:net_stats_manager_if",
    "$NETCONNMANAGER_SOURCE_DIR:net_conn_manager_static",
    "$NETMANAGER_BASE_ROOT/interfaces/kits/c/netconnclient:net_connection",
    "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
    "$NETSYSCONTROLLER_ROOT_DIR:netsys_controller",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "cJSON:cjson",
    "common_event_service:cesfwk_core",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "openssl:libcrypto_shared",
    "openssl:libssl_shared",
    "os_account:os_account_innerkits",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "curl:curl_shared",
  ]

  defines = [
    "NETMGR_LOG_TAG = \"NetConnManager\"",
    "LOG_DOMAIN = 0xD0015B0",
  ]

  if(netmanager_base_enable_pac_proxy){
    defines += [ "NETMANAGER_ENABLE_PAC_PROXY" ]
  }

  if (enable_netmgr_debug) {
    defines += [ "NETMGR_DEBUG" ]
  }

  if (netmanager_base_enable_feature_sysvpn) {
    defines += [ "SUPPORT_SYSVPN" ]
  }

  external_deps += [ "hilog:libhilog" ]

  if (enable_sys_func) {
    defines += [ "SYS_FUNC" ]
  }

  part_name = "netmanager_base"
  subsystem_name = "communication"
}
