# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/netmanager_base/netmanager_base_config.gni")

ohos_unittest("net_client_pac_file_url_test") {
    module_out_path =
    "netmanager_base/net_pac_manager_test"
    sanitize = {
        cfi = true
        cfi_cross_dso = true
        debug = false
    }

    branch_protector_ret = "pac_ret"

    sources = [
        "net_client_pac_file_url_test.cpp",
        "pac_server.cpp",
    ]

    include_dirs = [
        "$NETCONNMANAGER_SOURCE_DIR/include",
    ]

    deps = [
        "$NETCONNMANAGER_COMMON_DIR:net_service_common",
        "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
        "$NETCONNMANAGER_SOURCE_DIR:net_conn_manager_static",
        "$NETMANAGER_BASE_ROOT/interfaces/kits/c/netconnclient:net_connection",
    ]

    external_deps = [
        "jerryscript:jerryscript_shared_not_lite",
        "c_utils:utils",
        "ets_runtime:libark_jsruntime",
        "ets_utils:console",
        "ets_utils:worker",
        "eventhandler:libeventhandler",
        "faultloggerd:libunwinder",
        "ffrt:libffrt",
        "hilog:libhilog",
        "napi:ace_napi",
        "ability_base:want",
        "ability_runtime:app_manager",
        "ability_runtime:wantagent_innerkits",
        "access_token:libaccesstoken_sdk",
        "access_token:libnativetoken",
        "access_token:libtoken_setproc",
        "bundle_framework:appexecfwk_base",
        "bundle_framework:appexecfwk_core",
        "cJSON:cjson",
        "common_event_service:cesfwk_core",
        "common_event_service:cesfwk_innerkits",
        "eventhandler:libeventhandler",
        "ffrt:libffrt",
        "hitrace:hitrace_meter",
        "ipc:ipc_core",
        "netmanager_base:net_conn_manager_if",
        "netmanager_base:net_stats_manager_if",
        "relational_store:native_rdb",
        "safwk:system_ability_fwk",
        "samgr:samgr_proxy",
        "time_service:time_client",
        "access_token:libaccesstoken_sdk",
        "access_token:libnativetoken",
        "access_token:libtoken_setproc",
    ]

    defines = [
        "NETMGR_LOG_TAG = \"NetPacManagerUT\"",
        "LOG_DOMAIN = 0xD0015B0",
    ]

    if (enable_netmgr_debug) {
        defines += [ "NETMGR_DEBUG" ]
    }

    external_deps += [ "hilog:libhilog" ]

    part_name = "netmanager_base"
    subsystem_name = "communication"
}

ohos_unittest("net_pac_manager_test") {
    module_out_path =
    "netmanager_base/net_pac_manager_test"
    sanitize = {
        cfi = true
        cfi_cross_dso = true
        debug = false
    }

    branch_protector_ret = "pac_ret"

    sources = [
        "net_pac_manager_test.cpp",
        "mock_timer.cpp",
        "pac_server.cpp",
    ]

    include_dirs = [
        "$NETCONNMANAGER_SOURCE_DIR/include",
    ]

    deps = [
        "$NETCONNMANAGER_COMMON_DIR:net_service_common",
        "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
        "$NETCONNMANAGER_SOURCE_DIR:net_conn_manager_static",
        "$NETMANAGER_BASE_ROOT/interfaces/kits/c/netconnclient:net_connection",
    ]

    external_deps = [
        "jerryscript:jerryscript_shared_not_lite",
        "c_utils:utils",
        "ets_runtime:libark_jsruntime",
        "ets_utils:console",
        "ets_utils:worker",
        "eventhandler:libeventhandler",
        "faultloggerd:libunwinder",
        "ffrt:libffrt",
        "hilog:libhilog",
        "napi:ace_napi",
        "ability_base:want",
        "ability_runtime:app_manager",
        "ability_runtime:wantagent_innerkits",
        "access_token:libaccesstoken_sdk",
        "access_token:libnativetoken",
        "access_token:libtoken_setproc",
        "bundle_framework:appexecfwk_base",
        "bundle_framework:appexecfwk_core",
        "cJSON:cjson",
        "common_event_service:cesfwk_core",
        "common_event_service:cesfwk_innerkits",
        "eventhandler:libeventhandler",
        "ffrt:libffrt",
        "hitrace:hitrace_meter",
        "ipc:ipc_core",
        "netmanager_base:net_conn_manager_if",
        "netmanager_base:net_stats_manager_if",
        "relational_store:native_rdb",
        "safwk:system_ability_fwk",
        "samgr:samgr_proxy",
        "time_service:time_client",
    ]

    defines = [
        "NETMGR_LOG_TAG = \"NetPacManagerUT\"",
        "LOG_DOMAIN = 0xD0015B0",
    ]

    if (enable_netmgr_debug) {
        defines += [ "NETMGR_DEBUG" ]
    }

    external_deps += [ "hilog:libhilog" ]

    part_name = "netmanager_base"
    subsystem_name = "communication"
}
